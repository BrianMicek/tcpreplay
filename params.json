{"name":"Tcpreplay","tagline":"Pcap editing and replay tools for *NIX and Windows","body":"# Welcome to Tcpreplay\r\nTcpreplay is a suite of [GPLv3](http://www.gnu.org/licenses/gpl-3.0.html) licensed tools for UNIX (and Win32 under  Cygwin) operating systems which gives you the ability to use previously captured traffic in  libpcap format to test a variety of network devices. It allows you to classify traffic as client or server, rewrite Layer 2, 3 and 4 headers and finally replay the traffic back onto the network and through other devices such as switches, routers, firewalls, NIDS and IPS's. Tcpreplay supports both single and dual NIC modes for testing both sniffing and inline devices.\r\n\r\nTcpreplay is used by numerous firewall, IDS, IPS and other networking vendors, enterprises, universities, labs and open source projects. If your organization uses Tcpreplay, please let me know who you are and what you use it for so that I can continue to add features which are useful.\r\n\r\nVersion 3.5 introduces features that significantly enhances performance. For example, stock Intel 10GigE adapters with [netmap](http://info.iet.unipi.it/~luigi/netmap/) modified drivers and commodity hardware are consistently achieving full wire rates and greater than 100,000 flows/second.\r\n\r\n## Products\r\nThe Tcpreplay suite includes the following tools:\r\n\r\n### Network playback products:\r\n* tcpreplay - replays pcap files at arbitrary speeds onto the network with an option to replay with random IP addresses\r\n* tcpreplay-edit - replays pcap files at arbitrary speeds onto the network with numerous options to modify packets packets on the fly\r\n* tcpliveplay - replays TCP network traffic stored in a pcap file on live networks in a manner that a remote server will respond to\r\n\r\n### Pcap file editors:\r\n* tcpprep - multi-pass pcap file pre-processor which determines packets as client or server and splits them into creates output files for use by tcpreplay and tcprewrite\r\n* tcprewrite - pcap file editor which rewrites TCP/IP and Layer 2 packet headers\r\n\r\n### Utilities:\r\n* tcpbridge - bridge two network segments with the power of tcprewrite\r\n* tcpcapinfo - raw pcap file decoder and debugger\r\n\r\n## Install\r\n\r\n### Install from source code\r\nSelect the [TAR](https://github.com/appneta/tcpreplay/tarball/master) or [ZIP](https://github.com/appneta/tcpreplay/zipball/master) to download. Detailed installation instructions are available in the INSTALL document in the tar ball.\r\n\r\n### Simple directions for Unix users:\r\n```\r\n./configure \r\nmake\r\nsudo make install\r\n```\r\n### Build netmap feature\r\nThis feature will detect [netmap](http://info.iet.unipi.it/~luigi/netmap/)\r\ncapable network drivers on Linux and BSD \r\nsystems. If detected, the network driver is bypassed for the execution \r\nduration of tcpreplay and tcpreplay-edit, and network buffers will be \r\nwritten to directly. This will allow you to achieve full line rates on \r\ncommodity network adapters, similar to rates achieved by commercial network \r\ntraffic generators.\r\n\r\n**Note** that bypassing the network driver will disrupt other applications connected\r\nthrough the test interface. Don't test on the same interface you ssh'ed into.\r\n\r\nDownload latest and install netmap from <http://info.iet.unipi.it/~luigi/netmap/>\r\nIf you extracted netmap into /usr/src/ you can build normally. Otherwise you \r\nwill have to specify the netmap source directory, for example:\r\n\r\n```\r\n./configure --with-netmap=/home/fklassen/git/netmap\r\nmake\r\nsudo make install\r\n```\r\n\r\n## Usage\r\nGenerally speaking, most people would first run tcpprep against a pcap file to create a cache file which splits traffic between client and server if they are testing an inline device like a firewall or IPS. Then depending on their network setup and where the pcap was captured, they would use tcprewrite to edit the packets so that the device under test will examine them properly. Finally, tcpreplay is used to replay the pcap onto the network to do the test, while tcpliveplay is used to replay pcaps with TCP-only traffic onto the network.\r\n\r\n## Support\r\nIf you have a question or think you are experiencing a bug, it is important\r\nthat you provide enough information for us to help you.  Failure to provide\r\nenough information will likely cause your email to be ignored or get an\r\nannoyed reply from the author.\r\n\r\nIf your problem has to do with COMPILING tcpreplay:\r\n* Version of tcpreplay you are trying to compile\r\n* Platform (Red Hat Linux 9 on x86, Solaris 7 on SPARC, OS X on PPC, etc)\r\n* Contents of config.status\r\n* Output from 'make'\r\n* Any additional information you think that would be useful.\r\n\r\nIf your problem has to do with RUNNING tcpreplay or one of the sub-tools:\r\n* Version information (output of -V)\r\n* Command line used (options and arguments)\r\n* Platform (Red Hat Linux 9 on Intel, Solaris 7 on SPARC, etc)\r\n* Make & model of the network card(s) and driver(s) version\r\n* Error message (if available) and/or description of problem\r\n* If possible, attach the pcap file used (compressed with bzip2 or gzip preferred)\r\n* The core dump or backtrace if available\r\n* Detailed description of your problem or what you are trying to accomplish\r\n\r\nNote: The author of tcpreplay primarily uses OS X; hence, if you're reporting\r\nan issue on another platform, it is important that you give very detailed\r\ninformation as I may not be able to reproduce your issue.\r\n\r\nYou are also strongly encouraged to read the extensive documentation (man\r\npages, FAQ, documents in /docs and email list archives) BEFORE posting to the\r\ntcpreplay-users email list:\r\n\r\nhttp://lists.sourceforge.net/lists/listinfo/tcpreplay-users\r\n\r\nLastly, please don't email the author directly with your questions.  Doing so\r\nprevents others from potentially helping you and your question/answer from\r\nshowing up in the list archives.\r\n\r\n## License\r\nTcpreplay 3.5 is GPLv3 and includes software developed by the University of\r\nCalifornia, Berkeley, Lawrence Berkeley Laboratory and its contributors.\r\n\r\n## Authors and Contributors\r\nTcpreplay is authored by Aaron Turner(@synfinatic). In 2013 Fred Klassen (@fklassen), Founder and VP Network Technology, [AppNeta Inc.](http://appneta.com) added performance features and enhancements, and ultimately took over the maintenance of Tcpreplay.","google":"UA-46175744-1","note":"Don't delete this file! It's used internally to help with page regeneration."}